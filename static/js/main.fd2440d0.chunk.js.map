{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","nextPage","onPageChange","lastPage","Math","ceil","numberPages","from","to","numbers","n","push","getNumbers","isPrevLinkDisabled","isNextLinkDisabled","className","href","onClick","map","page","App","start","end","useState","setCurrentPage","setPerPage","firstItemOnPage","lastItemOnPage","min","itemsOnPage","Array","length","_","index","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"8KAWaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKP,EAAQC,GAC7BO,ECnBD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDYaG,CAAW,EAAGT,GAC5BU,EAAqC,IAAhBb,EACrBc,EAAqBd,IAAgBG,EAE3C,OACE,qBAAIY,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAeF,EAAqB,WAAa,IAA9D,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QAAS,kBAAMf,EAAaF,EAAc,IAL5C,oBAUDM,EAAYY,KAAI,SAACC,GAAD,OACf,oBAAeJ,UAAS,oBAAef,IAAgBmB,EAAO,SAAW,IAAzE,SACE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMf,EAAaiB,IAJ9B,SAMGA,KAPIA,MAWX,oBAAIJ,UAAS,oBAAeD,EAAqB,WAAa,IAA9D,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAA4B,IAAbf,EACfgB,QAAS,kBAAMf,EAAaD,IAL9B,wBEzCKmB,EAAgB,WAC3B,IALkBC,EAAeC,EAKjC,EAAsCC,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KAEA,EAA8BD,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgB0B,EAAhB,KACMxB,EAAWD,EAAc,EAEzB0B,GAAoB1B,EAAc,GAAKD,EAAW,EAClD4B,EAAiBvB,KAAKwB,IAAI7B,EAAUC,EAL5B,IAMR6B,GAZYR,EAYaK,EAZEJ,EAYeK,EAXzCG,MAAMvB,KAAK,CAAEwB,OAAQT,EAAMD,EAAQ,IAAK,SAACW,EAAGC,GAAJ,OAAcZ,EAAQY,MAWLf,KAAI,SAAAR,GAAC,qBAAYA,MAWjF,OACE,sBAAKK,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,iCAEIf,EAFJ,mBAE0B0B,EAF1B,cAE+CC,EAF/C,2BArBU,GAqBV,iBAOA,sBAAKZ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,mBACRmB,GAAG,mBACHnB,UAAU,eACVoB,MAAOpC,EACPqC,SAvBkB,SAACC,GAC3BZ,GAAYY,EAAMC,OAAOH,OACzBX,EAAe,IAgBT,UAOE,wBAAQW,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOI,QAAQ,mBAAmBxB,UAAU,qBAA5C,+BAKF,cAAC,EAAD,CACEjB,MAlDQ,GAmDRC,QAASA,EACTC,YAAaA,EACbC,SAAUA,EACVC,aA9CmB,SAACiB,GACxBK,EAAeL,MAgDb,6BACGU,EAAYX,KAAI,SAACsB,GAAD,OACf,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YClEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.fd2440d0.chunk.js","sourcesContent":["import React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  currentPage: number;\n  nextPage: number;\n  total: number;\n  onPageChange: (page: number) => void;\n  perPage: number;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  nextPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const numberPages = getNumbers(1, lastPage);\n  const isPrevLinkDisabled = currentPage === 1;\n  const isNextLinkDisabled = currentPage === lastPage;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${isPrevLinkDisabled ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevLinkDisabled}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {numberPages.map((page) => (\n        <li key={page} className={`page-item ${currentPage === page ? 'active' : ''}`}>\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${isNextLinkDisabled ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextPage === 0}\n          onClick={() => onPageChange(nextPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst getNumbers = (start: number, end: number) => {\n  return Array.from({ length: end - start + 1 }, (_, index) => start + index);\n};\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const nextPage = currentPage + 1;\n\n  const firstItemOnPage = ((currentPage - 1) * perPage) + 1;\n  const lastItemOnPage = Math.min(perPage * currentPage, total);\n  const itemsOnPage = getNumbers(firstItemOnPage, lastItemOnPage).map(n => `Item ${n}`);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleChangePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page\n        ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} \n          of ${total}\n        )`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"prevPageSelector\"\n            id=\"prevPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangePerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"prevPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        nextPage={nextPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {itemsOnPage.map((item) => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}